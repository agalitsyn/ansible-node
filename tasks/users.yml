---

- name: Create admin user
  user: >
    name="{{ node_ssh_user }}"
    comment="Administrator account"
    state=present
    groups="{{ node_ssh_groups }}"
    shell=/bin/bash
    append=yes
    createhome=yes

- name: Ensure sudoers.d is enabled
  lineinfile: >
    dest=/etc/sudoers
    regexp='^#includedir /etc/sudoers.d'
    line='#includedir /etc/sudoers.d'
    state=present backup=yes

- name: Set up password-less sudo for admin users
  copy: >
    content="%{{ node_ssh_groups }} ALL=(ALL) NOPASSWD:ALL\nDefaults env_keep+=SSH_AUTH_SOCK\n"
    dest=/etc/sudoers.d/admin
    owner=root group=root mode=0440

- name: Check login user authorized_keys file is exists
  file:
    path: "{{ ansible_env.HOME }}/.ssh/authorized_keys"
    state: file

- name: Create .ssh folder
  file:
    path: "/home/{{ node_ssh_user }}/.ssh"
    state: directory
    mode: 0755
    owner: "{{ node_ssh_user }}"
    group: "{{ node_ssh_user }}"
  when: node_ssh_user != ansible_user

- name: Create authorized_keys file
  file:
    path: "/home/{{ node_ssh_user }}/.ssh/authorized_keys"
    state: touch
    owner: "{{ node_ssh_user }}"
    group: "{{ node_ssh_user }}"
  when: node_ssh_user != ansible_user

- name: Copy login user authorized_keys
  copy:
    remote_src: yes
    src: "{{ ansible_env.HOME }}/.ssh/authorized_keys"
    dest: "/home/{{ node_ssh_user }}/.ssh/authorized_keys"
    owner: "{{ node_ssh_user }}"
    group: "{{ node_ssh_user }}"
  when: node_ssh_user != ansible_user
